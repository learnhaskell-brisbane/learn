Chapter 2 Agenda
22 Nov 2011

Housekeeping
------------

Chapter 2 Summary
------------------

1. Calling Function
	a) Infix functions
	b) Prefix functions
	c) Operator precedence
		1. [1..9]
		2. Higher is evaluated first
		3. :info to find precedence
	d) Associativity/fixity
		1. Given operators of the same precedence how are they grouped in the absence of parentheses?
		2. Left vs Right (subtract, cons)
		3. :info is your friend
	
2. Function Definition
	a) if/then/else
	b) Combining functions
	c) Pure functions return values
	d) if is an expression
	e) Strict - the opposite of lazy
	f) Functions can't begin with a capital letter
	
3. Lists
    a) Elements are of one type
    b) Singleton list
	c) Concatenation with ++
	d) Strings are just a list of characters
	e) Performance of ++
	f) Cons
	g) Accessing list elements
	h) List comparison
	i) Functions that operate on lists (head, tail, init, last)
    j) More functions that operate on lists: (null, reverse, take, drop, maximum, minimum, sum, product, elem, notElem)

4. Ranges
	a) Work across enumerated types (Numbers, characters, Booleans)
	b) Syntax
	c) Counting down an enumeration
	d) Functions that create ranges/lists (cycle, repeat, replicate)

5. List Comprehension
	a) Syntax
	b) Filtering/Guards
	c) Nested lists
	
6. Tuples
	a) Heterogenous types
	b) Length/Arity is encoded in type
	c) Access
	d) Pairs,triples, 4-tuples, 5-tuples etc
	e) Finite.
	f) Can't switch type position
	g) Can't compare tuples of different sizes/types
	h) Functions on pairs (fst, snd)
	i) zip

Discussion of Chapter Questions
-------------------------------

1. Rewrite the following with the use of the notElem (not an element of) function:

[x | x <- [10..20], x /= 13, x /= 15, x /=19]

2. Write the replicate function, in terms of repeat and take. Eg:

replicate 3 10 == ??

3. Write the sum of the numbers in each sublist of xxs without flattening it:

let xxs = [ [1,3,5,2,3,1,2,4,5],[1,2,3,4,5,6,7,8,9],[1,2,4,2,1,6,3,1,3,2,3,6] ]

Eg: [ [x], [y], [z] ], where x,y,z are totals.

4. What is the type of the tuple in the following expression:

([1,2,3], "hello", ['a','b'], (1, 'c', True))

Eg. (True, 'a') is a (Bool, Char)

Have a look @ (https://github.com/learnhaskell-brisbane/learn/wiki/Notes-for-Week-2-Getting-Started) for further info.

General Discussion
-------------------

Come prepared to answer the following questions:

1. What were the biggest eye-openers/lightbulb moments for you?
2. What was challenging and what questions did you write down?

Outline of Chapter 3 and Exercises
-------------------------------------

Jason to complete? (Jason - Discuss with Matt and myself if you have questions)

Miscellaneous
-------------